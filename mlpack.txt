include(${CMAKE_CURRENT_SOURCE_DIR}/../pri/boost.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/../pri/lapack.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/../pri/libxml2.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/../pri/armadillo.txt)

add_definitions(-DNOMINMAX)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../3rdLibs/mlpack/mlpack-1.0.12/src)

if(WIN32)
    set(MLPACK_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../3rdLibs/mlpack/mlpack-1.0.12/bin)
    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
        if(MSVC14)		
		    if(CMAKE_BUILD_TYPE MATCHES Release)			    
                target_link_libraries(${PROJECT_NAME} ${MLPACK_PATH}/vc2015_x86_amd64/release/mlpack.lib)
                target_link_libraries(${PROJECT_NAME} ${BOOST_ROOT}/lib64-msvc-14.0/libboost_program_options-vc140-mt-1_59.lib)
				target_link_libraries(${PROJECT_NAME} ${BOOST_ROOT}/lib64-msvc-14.0/libboost_random-vc140-mt-1_59.lib)
				target_link_libraries(${PROJECT_NAME} ${BOOST_ROOT}/lib64-msvc-14.0/libboost_math_c99-vc140-mt-1_59.lib)				
			else()
			    message("only support release build by now")
		    endif(CMAKE_BUILD_TYPE MATCHES Release)
		else()
		    message("only support msvc14")
	    endif(MSVC14)
	else()
	        message("only support 64bits")
	endif(CMAKE_SIZEOF_VOID_P EQUAL 8)
else()
    message("do not support non windows platform yet")		
endif(WIN32)
